"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[294],{8072:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>E,contentTitle:()=>F,default:()=>N,frontMatter:()=>R,metadata:()=>C,toc:()=>M});var s=r(5893),o=r(1151);function t(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"function-interpret",children:"Function: interpret"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"interpret"}),"(",(0,s.jsx)(n.code,{children:"t"}),", ",(0,s.jsx)(n.code,{children:"options?"}),"): ",(0,s.jsx)(n.code,{children:"Graph"})]}),"\n",(0,s.jsxs)(n.p,{children:["Interpret tree ",(0,s.jsx)(n.code,{children:"t"})," as a graph using ",(0,s.jsx)(n.code,{children:"model"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Tree interpretation is the process of transforming the nodes and\nedges of a tree into a directed graph. A semantic model determines\nwhich edges are inverted and how to deinvert them. If ",(0,s.jsx)(n.code,{children:"model"})," is\nnot provided, the default model will be used."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"options"})," param consists of an object with a single ",(0,s.jsx)(n.code,{children:"model"})," property."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Example"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Tree, interpret } from 'penman-js';\n\nconst t = new Tree(['b', [\n  ['/', 'bark-01'],\n  ['ARG0', ['d', [\n    ['/', 'dog']\n  ]]]\n]]);\n\nconst g = interpret(t);\nfor (const triple of g.triples) {\n  console.log(triple);\n}\n// ['b', ':instance', 'bark-01']\n// ['b', ':ARG0', 'd']\n// ['d', ':instance', 'dog']\n"})})]})}function i(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}function c(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"function-rearrange",children:"Function: rearrange"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"rearrange"}),"(",(0,s.jsx)(n.code,{children:"t"}),", ",(0,s.jsx)(n.code,{children:"options?"}),"): ",(0,s.jsx)(n.code,{children:"void"})]}),"\n",(0,s.jsxs)(n.p,{children:["Sort the branches at each node in tree ",(0,s.jsx)(n.code,{children:"t"})," according to ",(0,s.jsx)(n.code,{children:"key"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Each node in a tree contains a list of branches. This function sorts\nthose lists in-place using the ",(0,s.jsx)(n.code,{children:"key"})," function, which accepts a role and\nreturns some sortable criterion."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"options"})," consists of an object with optional ",(0,s.jsx)(n.code,{children:"key"})," and ",(0,s.jsx)(n.code,{children:"attributesFirst"})," properties."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If the ",(0,s.jsx)(n.code,{children:"attributesFirst"})," argument is ",(0,s.jsx)(n.code,{children:"true"}),", attribute branches will appear before any edges."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"key"})," is a function used for sorting branches."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Instance branches (",(0,s.jsx)(n.code,{children:"/"}),") always appear before any other branches."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Example"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { rearrange, Model, PENMANCodec } from 'penman-js';\n\nconst c = new PENMANCodec();\nconst t = c.parse(`\n  (s / see-01\n     :ARG1 (c / cat)\n     :ARG0 (d / dog))`);\nrearrange(t, { key: Model().canonicalOrder, attributesFirst: true });\nconsole.log(c.format(t));\n// (s / see-01\n//    :ARG0 (d / dog)\n//    :ARG1 (c / cat))\n"})})]})}function d(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}function l(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"function-configure",children:"Function: configure"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"configure"}),"(",(0,s.jsx)(n.code,{children:"g"}),", ",(0,s.jsx)(n.code,{children:"options?"}),"): ",(0,s.jsx)(n.code,{children:"Tree"})]}),"\n",(0,s.jsx)(n.p,{children:"Create a tree from a graph by making as few decisions as possible."}),"\n",(0,s.jsxs)(n.p,{children:["A graph interpreted from a valid tree using ",(0,s.jsx)(n.code,{children:"interpret"})," will\ncontain epigraphical markers that describe how the triples of a\ngraph are to be expressed in a tree, and thus configuring this\ntree requires only a single pass through the list of triples. If\nthe markers are missing or out of order, or if the graph has been\nmodified, then the configuration process will have to make\ndecisions about where to insert tree branches. These decisions are\ndeterministic, but may result in a tree different than the one\nexpected."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"options"})," consists of an object with optional ",(0,s.jsx)(n.code,{children:"top"})," and ",(0,s.jsx)(n.code,{children:"model"})," properties."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"top"})," is the variable to use as the top of the graph; if ",(0,s.jsx)(n.code,{children:"null"}),", the top of ",(0,s.jsx)(n.code,{children:"g"})," will be used."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"model"})," is the ",(0,s.jsx)(n.code,{children:"Model"})," used to configure the tree."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Example"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Graph, configure } from 'penman-js';\n\nconst g = new Graph([\n  ['b', ':instance', 'bark-01'],\n  ['b', ':ARG0', 'd'],\n  ['d', ':instance', 'dog']\n]);\n\nconst t = configure(g);\nconsole.log(t);\n// Tree('b', [['/', 'bark-01'], [':ARG0', ['d', [['/', 'dog']]]]])\n"})})]})}function a(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}function h(e){const n={code:"code",h2:"h2",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"function-reconfigure",children:"Function: reconfigure"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"reconfigure"}),"(",(0,s.jsx)(n.code,{children:"graph"}),", ",(0,s.jsx)(n.code,{children:"options?"}),"): ",(0,s.jsx)(n.code,{children:"Tree"})]}),"\n",(0,s.jsx)(n.p,{children:"Create a tree from a graph after any discarding layout markers."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"options"})," consists of an object with optional ",(0,s.jsx)(n.code,{children:"top"}),", ",(0,s.jsx)(n.code,{children:"model"}),", and ",(0,s.jsx)(n.code,{children:"key"})," properties.\nIf ",(0,s.jsx)(n.code,{children:"key"})," is provided, triples are sorted according to the key."]})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}function x(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"function-getpushedvariable",children:"Function: getPushedVariable"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getPushedVariable"}),"(",(0,s.jsx)(n.code,{children:"g"}),", ",(0,s.jsx)(n.code,{children:"triple"}),"): ",(0,s.jsx)(n.code,{children:"Variable"})," | ",(0,s.jsx)(n.code,{children:"null"})]}),"\n",(0,s.jsxs)(n.p,{children:["Return the variable pushed by ",(0,s.jsx)(n.code,{children:"triple"}),", if any, otherwise ",(0,s.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Example"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { decode, getPushedVariable } from 'penman-js';\n\nconst g = decode('(a / alpha :ARG0 (b / beta))');\nconsole.log(getPushedVariable(g, ['a', ':instance', 'alpha'])); // Outputs: null\nconsole.log(getPushedVariable(g, ['a', ':ARG0', 'b'])); // Outputs: 'b'\n"})})]})}function j(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}function u(e){const n={code:"code",h2:"h2",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"function-appearsinverted",children:"Function: appearsInverted"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"appearsInverted"}),"(",(0,s.jsx)(n.code,{children:"g"}),", ",(0,s.jsx)(n.code,{children:"triple"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n",(0,s.jsxs)(n.p,{children:["Return ",(0,s.jsx)(n.code,{children:"true"})," if ",(0,s.jsx)(n.code,{children:"triple"})," appears inverted in serialization."]}),"\n",(0,s.jsxs)(n.p,{children:["More specifically, this function returns ",(0,s.jsx)(n.code,{children:"true"})," if ",(0,s.jsx)(n.code,{children:"triple"})," has\na ",(0,s.jsx)(n.code,{children:"Push"})," epigraphical marker in graph ",(0,s.jsx)(n.code,{children:"g"})," whose associated\nvariable is the source variable of ",(0,s.jsx)(n.code,{children:"triple"}),". This should be\naccurate when testing a triple in a graph interpreted using\n",(0,s.jsx)(n.code,{children:"interpret"})," (including ",(0,s.jsx)(n.code,{children:"PENMANCodec.decode"})," and similar methods),\nbut it does not guarantee that a new serialization of ",(0,s.jsx)(n.code,{children:"g"})," will\nexpress ",(0,s.jsx)(n.code,{children:"triple"})," as inverted as it can change if the graph or its\nepigraphical markers are modified, if a new top is chosen, etc."]})]})}function g(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"function-nodecontexts",children:"Function: nodeContexts"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"nodeContexts"}),"(",(0,s.jsx)(n.code,{children:"g"}),"): (",(0,s.jsx)(n.code,{children:"Variable"})," | ",(0,s.jsx)(n.code,{children:"null"}),")[]"]}),"\n",(0,s.jsxs)(n.p,{children:["Return the list of node contexts corresponding to triples in ",(0,s.jsx)(n.code,{children:"g"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If a node context is unknown, the value ",(0,s.jsx)(n.code,{children:"null"})," is substituted."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Example"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { decode, nodeContexts } from 'penman-js';\n\nconst g = decode(`\n  (a / alpha\n     :attr val\n     :ARG0 (b / beta :ARG0 (g / gamma))\n     :ARG0-of g)`);\nfor (const [ctx, trp] of zip(nodeContexts(g), g.triples)) {\n  console.log(ctx, ':', trp);\n}\n\n// a : ['a', ':instance', 'alpha']\n// a : ['a', ':attr', 'val']\n// a : ['a', ':ARG0', 'b']\n// b : ['b', ':instance', 'beta']\n// b : ['b', ':ARG0', 'g']\n// g : ['g', ':instance', 'gamma']\n// a : ['g', ':ARG0', 'a']\n"})})]})}function f(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}function b(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"class-layoutmarker",children:"Class: LayoutMarker"}),"\n",(0,s.jsx)(n.p,{children:"Epigraph marker for layout choices."}),"\n",(0,s.jsxs)("div",{class:"padding-left--lg",children:[(0,s.jsx)(n.h3,{id:"LayoutMarker-constructor",children:"constructor"}),(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.strong,{children:"new LayoutMarker"}),"(): ",(0,s.jsx)(n.code,{children:"LayoutMarker"})]}),(0,s.jsx)(n.hr,{}),(0,s.jsx)(n.h3,{id:"epigraph-mode",children:"mode"}),(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.strong,{children:"mode"}),": ",(0,s.jsx)(n.code,{children:"number"})," = ",(0,s.jsx)(n.code,{children:"0"})]}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"mode"})," attribute specifies what the Epidatum annotates:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mode = 0"})," -- unspecified"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mode = 1"})," -- role epidata"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mode = 2"})," -- target epidata"]}),"\n"]})]})]})}function v(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(b,{...e})}):b(e)}function y(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"class-pop",children:"Class: Pop"}),"\n",(0,s.jsx)(n.p,{children:"Epigraph marker to indicate the end of a node context."}),"\n",(0,s.jsxs)("div",{class:"padding-left--lg",children:[(0,s.jsx)(n.h3,{id:"Pop-constructor",children:"constructor"}),(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.strong,{children:"new Pop"}),"(): ",(0,s.jsx)(n.code,{children:"Pop"})]}),(0,s.jsx)(n.hr,{}),(0,s.jsx)(n.h3,{id:"epigraph-mode",children:"mode"}),(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.strong,{children:"mode"}),": ",(0,s.jsx)(n.code,{children:"number"})," = ",(0,s.jsx)(n.code,{children:"0"})]}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"mode"})," attribute specifies what the Epidatum annotates:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mode = 0"})," -- unspecified"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mode = 1"})," -- role epidata"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mode = 2"})," -- target epidata"]}),"\n"]}),(0,s.jsx)(n.hr,{}),(0,s.jsx)(n.h3,{id:"layout-toString",children:"toString"}),(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"toString"}),"(): ",(0,s.jsx)(n.code,{children:"string"})]})]})]})}function w(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(y,{...e})}):y(e)}function k(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"class-push",children:"Class: Push"}),"\n",(0,s.jsx)(n.p,{children:"Epigraph marker to indicate a new node context."}),"\n",(0,s.jsxs)("div",{class:"padding-left--lg",children:[(0,s.jsx)(n.h3,{id:"layout-constructor",children:"constructor"}),(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.strong,{children:"new Push"}),"(",(0,s.jsx)(n.code,{children:"variable"}),"): ",(0,s.jsx)(n.code,{children:"Push"})]}),(0,s.jsx)(n.hr,{}),(0,s.jsx)(n.h3,{id:"epigraph-mode",children:"mode"}),(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.strong,{children:"mode"}),": ",(0,s.jsx)(n.code,{children:"number"})," = ",(0,s.jsx)(n.code,{children:"0"})]}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"mode"})," attribute specifies what the Epidatum annotates:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mode = 0"})," -- unspecified"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mode = 1"})," -- role epidata"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mode = 2"})," -- target epidata"]}),"\n"]}),(0,s.jsx)(n.hr,{}),(0,s.jsx)(n.h3,{id:"layout-variable",children:"variable"}),(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.strong,{children:"variable"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),(0,s.jsx)(n.hr,{}),(0,s.jsx)(n.h3,{id:"layout-toString",children:"toString"}),(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"toString"}),"(): ",(0,s.jsx)(n.code,{children:"string"})]})]})]})}function A(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(k,{...e})}):k(e)}function P(e){const n={code:"code",h2:"h2",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"variable-pop",children:"Variable: POP"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.code,{children:"Const"})," ",(0,s.jsx)(n.strong,{children:"POP"}),": ",(0,s.jsx)(n.code,{children:"Pop"})]}),"\n",(0,s.jsxs)(n.p,{children:["A singleton instance of ",(0,s.jsx)(n.code,{children:"Pop"}),"."]})]})}function G(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(P,{...e})}):P(e)}const R={},F="layout",C={id:"api.layout",title:"layout",description:"Interpreting trees to graphs and configuring graphs to trees.",source:"@site/docs/api.layout.mdx",sourceDirName:".",slug:"/api.layout",permalink:"/penman-js/api.layout",draft:!1,unlisted:!1,editUrl:"https://github.com/chanind/penman-js/tree/main/docs/docs/api.layout.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"graph",permalink:"/penman-js/api.graph"},next:{title:"model",permalink:"/penman-js/api.model"}},E={},M=[{value:"Function: interpret",id:"function-interpret",level:2},{value:"Function: rearrange",id:"function-rearrange",level:2},{value:"Function: configure",id:"function-configure",level:2},{value:"Function: reconfigure",id:"function-reconfigure",level:2},{value:"Function: getPushedVariable",id:"function-getpushedvariable",level:2},{value:"Function: appearsInverted",id:"function-appearsinverted",level:2},{value:"Function: nodeContexts",id:"function-nodecontexts",level:2},{value:"Class: LayoutMarker",id:"class-layoutmarker",level:2},{value:"constructor",id:"LayoutMarker-constructor",level:3},{value:"mode",id:"epigraph-mode",level:3},{value:"Class: Pop",id:"class-pop",level:2},{value:"constructor",id:"Pop-constructor",level:3},{value:"mode",id:"epigraph-mode",level:3},{value:"toString",id:"layout-toString",level:3},{value:"Class: Push",id:"class-push",level:2},{value:"constructor",id:"layout-constructor",level:3},{value:"mode",id:"epigraph-mode",level:3},{value:"variable",id:"layout-variable",level:3},{value:"toString",id:"layout-toString",level:3},{value:"Variable: POP",id:"variable-pop",level:2}];function T(e){const n={code:"code",h1:"h1",hr:"hr",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"layout",children:"layout"}),"\n",(0,s.jsx)(n.p,{children:"Interpreting trees to graphs and configuring graphs to trees."}),"\n",(0,s.jsxs)(n.p,{children:['In order to serialize graphs into the PENMAN format, a tree-like\nlayout of the graph must be decided. Deciding a layout includes\nchoosing the order of the edges from a node and the paths to get to a\nnode definition (the position in the tree where a node\'s concept and\nedges are specified). For instance, the following graphs for "The dog\nbarked loudly" have different edge orders on the ',(0,s.jsx)(n.code,{children:"b"})," node:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"(b / bark-01           (b / bark-01\n    :ARG0 (d / dog)        :mod (l / loud)\n    :mod (l / loud))       :ARG0 (d / dog))\n"})}),"\n",(0,s.jsxs)(n.p,{children:['With re-entrancies, there are choices about which location of a\nre-entrant node gets the full definition with its concept (node\nlabel), etc. For instance, the following graphs for "The dog tried to\nbark" have different locations for the definition of the ',(0,s.jsx)(n.code,{children:"d"})," node:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"(t / try-01              (t / try-01\n    :ARG0 (d / dog)          :ARG0 d\n    :ARG1 (b / bark-01       :ARG1 (b / bark-01\n        :ARG0 d))                :ARG0 (d / dog))\n"})}),"\n",(0,s.jsx)(n.p,{children:"With inverted edges, there are even more possibilities, such as:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"(t / try-01                (t / try-01\n    :ARG0 (d / dog             :ARG1 (b / bark-01\n        :ARG0-of b)                :ARG0 (d / dog\n    :ARG1 (b / bark-01))             :ARG0-of t)))\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This module introduces two epigraphical markers so that a pure graph\nparsed from PENMAN can retain information about its tree layout\nwithout altering its graph properties. The first marker type is\n",(0,s.jsx)(n.code,{children:"Push"}),", which is put on a triple to indicate that the triple\nintroduces a new node context, while the sentinel ",(0,s.jsx)(n.code,{children:"POP"}),"\nindicates that a triple is at the end of one or more node contexts.\nThese markers only work if the triples in the graph's data are\nordered. For instance, one of the graphs above (repeated here) has the\nfollowing data:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"PENMAN                 Graph                            Epigraph\n(t / try-01            [('t', ':instance', 'try-01'),   :\n   :ARG0 (d / dog)      ('t', ':ARG0', 'd'),            : Push('d')\n   :ARG1 (b / bark-01   ('d', ':instance', 'dog'),      : POP\n      :ARG0 d))         ('t', ':ARG1', 'b'),            : Push('b')\n                        ('b', ':instance', 'bark-01'),  :\n                        ('b', ':ARG0', 'd')]            : POP\n"})}),"\n",(0,s.jsx)(i,{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(d,{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(a,{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(p,{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(j,{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(g,{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(f,{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(v,{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(w,{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(A,{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(G,{})]})}function N(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(T,{...e})}):T(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>i});var s=r(7294);const o={},t=s.createContext(o);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);