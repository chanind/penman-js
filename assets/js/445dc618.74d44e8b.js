"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[760],{2679:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>u,contentTitle:()=>x,default:()=>N,frontMatter:()=>j,metadata:()=>m,toc:()=>g});var r=c(5893),d=c(1151);function s(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,d.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"class-penmancodec",children:"Class: PENMANCodec"}),"\n",(0,r.jsx)(n.p,{children:"An encoder/decoder for PENMAN-serialized graphs."}),"\n",(0,r.jsxs)("div",{class:"padding-left--lg",children:[(0,r.jsx)(n.h3,{id:"codec-constructor",children:"constructor"}),(0,r.jsxs)(n.p,{children:["\u2022 ",(0,r.jsx)(n.strong,{children:"new PENMANCodec"}),"(",(0,r.jsx)(n.code,{children:"model?"}),"): ",(0,r.jsx)(n.code,{children:"PENMANCodec"})]}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h3,{id:"codec-model",children:"model"}),(0,r.jsxs)(n.p,{children:["\u2022 ",(0,r.jsx)(n.strong,{children:"model"}),": ",(0,r.jsx)(n.code,{children:"Model"})]}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h3,{id:"codec-decode",children:"decode"}),(0,r.jsxs)(n.p,{children:["\u25b8 ",(0,r.jsx)(n.strong,{children:"decode"}),"(",(0,r.jsx)(n.code,{children:"s"}),"): ",(0,r.jsx)(n.code,{children:"Graph"})]}),(0,r.jsxs)(n.p,{children:["Deserialize a PENMAN-notation string ",(0,r.jsx)(n.code,{children:"s"})," into its Graph object."]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Example"})})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { PENMANCodec } from 'penman-js/codec';\n\nconst codec = new PENMANCodec();\nconst graph = codec.decode('(b / bark-01 :ARG0 (d / dog))');\nconsole.log(graph);\n// Outputs: Graph object with top node 'b'\n"})}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h3,{id:"codec-encode",children:"encode"}),(0,r.jsxs)(n.p,{children:["\u25b8 ",(0,r.jsx)(n.strong,{children:"encode"}),"(",(0,r.jsx)(n.code,{children:"g"}),", ",(0,r.jsx)(n.code,{children:"top?"}),", ",(0,r.jsx)(n.code,{children:"indent?"}),", ",(0,r.jsx)(n.code,{children:"compact?"}),"): ",(0,r.jsx)(n.code,{children:"string"})]}),(0,r.jsxs)(n.p,{children:["Serialize the graph ",(0,r.jsx)(n.code,{children:"g"})," into PENMAN notation."]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Example"})})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { Graph } from 'penman-js/graph';\nimport { PENMANCodec } from 'penman-js/codec';\n\nconst codec = new PENMANCodec();\nconsole.log(codec.encode(new Graph([['h', 'instance', 'hi']])));\n// '(h / hi)'\n"})}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h3,{id:"codec-format",children:"format"}),(0,r.jsxs)(n.p,{children:["\u25b8 ",(0,r.jsx)(n.strong,{children:"format"}),"(",(0,r.jsx)(n.code,{children:"tree"}),", ",(0,r.jsx)(n.code,{children:"indent?"}),", ",(0,r.jsx)(n.code,{children:"compact?"}),"): ",(0,r.jsx)(n.code,{children:"string"})]}),(0,r.jsxs)(n.p,{children:["Format ",(0,r.jsx)(n.em,{children:"tree"})," into a PENMAN string."]}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h3,{id:"codec-formatTriples",children:"formatTriples"}),(0,r.jsxs)(n.p,{children:["\u25b8 ",(0,r.jsx)(n.strong,{children:"formatTriples"}),"(",(0,r.jsx)(n.code,{children:"triples"}),", ",(0,r.jsx)(n.code,{children:"indent?"}),"): ",(0,r.jsx)(n.code,{children:"string"})]}),(0,r.jsxs)(n.p,{children:["Return the formatted triple conjunction of ",(0,r.jsx)(n.code,{children:"triples"}),"."]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Example"})})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { PENMANCodec } from 'penman-js/codec';\n\nconst codec = new PENMANCodec();\nconsole.log(codec.formatTriples([\n  ['a', ':instance', 'alpha'],\n  ['a', ':ARG0', 'b'],\n  ['b', ':instance', 'beta']\n]));\n// Expected output:\n// 'instance(a, alpha) ^\\\\nARG0(a, b) ^\\\\ninstance(b, beta)'\n"})}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h3,{id:"codec-iterdecode",children:"iterdecode"}),(0,r.jsxs)(n.p,{children:["\u25b8 ",(0,r.jsx)(n.strong,{children:"iterdecode"}),"(",(0,r.jsx)(n.code,{children:"lines"}),"): ",(0,r.jsx)(n.code,{children:"IterableIterator"}),"<",(0,r.jsx)(n.code,{children:"Graph"}),">"]}),(0,r.jsxs)(n.p,{children:["Yield graphs parsed from ",(0,r.jsx)(n.code,{children:"lines"}),"."]}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h3,{id:"codec-iterparse",children:"iterparse"}),(0,r.jsxs)(n.p,{children:["\u25b8 ",(0,r.jsx)(n.strong,{children:"iterparse"}),"(",(0,r.jsx)(n.code,{children:"lines"}),"): ",(0,r.jsx)(n.code,{children:"IterableIterator"}),"<",(0,r.jsx)(n.code,{children:"Tree"}),">"]}),(0,r.jsxs)(n.p,{children:["Yield trees parsed from ",(0,r.jsx)(n.code,{children:"lines"}),"."]}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h3,{id:"codec-parse",children:"parse"}),(0,r.jsxs)(n.p,{children:["\u25b8 ",(0,r.jsx)(n.strong,{children:"parse"}),"(",(0,r.jsx)(n.code,{children:"s"}),"): ",(0,r.jsx)(n.code,{children:"Tree"})]}),(0,r.jsxs)(n.p,{children:["Parse a PENMAN-notation string ",(0,r.jsx)(n.code,{children:"s"})," into its tree structure."]}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h3,{id:"codec-parseTriples",children:"parseTriples"}),(0,r.jsxs)(n.p,{children:["\u25b8 ",(0,r.jsx)(n.strong,{children:"parseTriples"}),"(",(0,r.jsx)(n.code,{children:"s"}),"): ",(0,r.jsx)(n.code,{children:"BasicTriple"}),"[]"]}),(0,r.jsxs)(n.p,{children:["Parse a triple conjunction from ",(0,r.jsx)(n.em,{children:"s"}),"."]})]})]})}function o(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}function i(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,d.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"function-decode",children:"Function: decode"}),"\n",(0,r.jsxs)(n.p,{children:["\u25b8 ",(0,r.jsx)(n.strong,{children:"decode"}),"(",(0,r.jsx)(n.code,{children:"s"}),", ",(0,r.jsx)(n.code,{children:"model?"}),"): ",(0,r.jsx)(n.code,{children:"Graph"})]}),"\n",(0,r.jsxs)(n.p,{children:["Deserialize PENMAN-serialized string ",(0,r.jsx)(n.code,{children:"s"})," into its Graph object."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Example"})})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { decode } from 'penman-js';\n\nconst graph = decode('(b / bark-01 :ARG0 (d / dog))');\n"})})]})}function t(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,d.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"function-iterdecode",children:"Function: iterdecode"}),"\n",(0,r.jsxs)(n.p,{children:["\u25b8 ",(0,r.jsx)(n.strong,{children:"iterdecode"}),"(",(0,r.jsx)(n.code,{children:"lines"}),", ",(0,r.jsx)(n.code,{children:"model?"}),"): ",(0,r.jsx)(n.code,{children:"IterableIterator"}),"<",(0,r.jsx)(n.code,{children:"Graph"}),">"]}),"\n",(0,r.jsxs)(n.p,{children:["Yield graphs parsed from ",(0,r.jsx)(n.code,{children:"lines"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Example"})})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { iterdecode } from 'penman-js';\n\nfor (const g of iterdecode('(a / alpha) (b / beta)')) {\n  // ...\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}function a(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,d.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"function-encode",children:"Function: encode"}),"\n",(0,r.jsxs)(n.p,{children:["\u25b8 ",(0,r.jsx)(n.strong,{children:"encode"}),"(",(0,r.jsx)(n.code,{children:"g"}),", ",(0,r.jsx)(n.code,{children:"top?"}),", ",(0,r.jsx)(n.code,{children:"model?"}),", ",(0,r.jsx)(n.code,{children:"indent?"}),", ",(0,r.jsx)(n.code,{children:"compact?"}),"): ",(0,r.jsx)(n.code,{children:"string"})]}),"\n",(0,r.jsxs)(n.p,{children:["Serialize the graph ",(0,r.jsx)(n.code,{children:"g"})," from ",(0,r.jsx)(n.code,{children:"top"})," to PENMAN notation."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Example"})})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { encode, Graph } from 'penman-js';\n\nconsole.log(encode(new Graph([['h', 'instance', 'hi']])));\n// '(h / hi)'\n"})})]})}function p(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}const j={},x="codec",m={id:"api.codec",title:"codec",description:"_",source:"@site/docs/api.codec.mdx",sourceDirName:".",slug:"/api.codec",permalink:"/penman-js/api.codec",draft:!1,unlisted:!1,editUrl:"https://github.com/chanind/penman-js/tree/main/docs/docs/api.codec.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Trees and graphs",permalink:"/penman-js/trees-graphs-epigraphs"},next:{title:"constant",permalink:"/penman-js/api.constant"}},u={},g=[{value:"Function: encode",id:"function-encode",level:2},{value:"Function: decode",id:"function-decode",level:2},{value:"Function: iterdecode",id:"function-iterdecode",level:2},{value:"Class: PENMANCodec",id:"class-penmancodec",level:2},{value:"constructor",id:"codec-constructor",level:3},{value:"model",id:"codec-model",level:3},{value:"decode",id:"codec-decode",level:3},{value:"encode",id:"codec-encode",level:3},{value:"format",id:"codec-format",level:3},{value:"formatTriples",id:"codec-formatTriples",level:3},{value:"iterdecode",id:"codec-iterdecode",level:3},{value:"iterparse",id:"codec-iterparse",level:3},{value:"parse",id:"codec-parse",level:3},{value:"parseTriples",id:"codec-parseTriples",level:3}];function f(e){const n={h1:"h1",hr:"hr",...(0,d.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"codec",children:"codec"}),"\n",(0,r.jsx)(p,{}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(t,{}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(h,{}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(o,{})]})}function N(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}},1151:(e,n,c)=>{c.d(n,{Z:()=>i,a:()=>o});var r=c(7294);const d={},s=r.createContext(d);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);