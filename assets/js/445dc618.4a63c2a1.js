"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[760],{6267:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>T,contentTitle:()=>b,default:()=>P,frontMatter:()=>w,metadata:()=>E,toc:()=>A});var c=s(5893),r=s(1151);function o(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"class-penmancodec",children:"Class: PENMANCodec"}),"\n",(0,c.jsx)(n.p,{children:"An encoder/decoder for PENMAN-serialized graphs."}),"\n",(0,c.jsxs)("div",{class:"padding-left--lg",children:[(0,c.jsx)(n.h3,{id:"codec-constructor",children:"constructor"}),(0,c.jsxs)(n.p,{children:["\u2022 ",(0,c.jsx)(n.strong,{children:"new PENMANCodec"}),"(",(0,c.jsx)(n.code,{children:"model?"}),"): ",(0,c.jsx)(n.code,{children:"PENMANCodec"})]}),(0,c.jsx)(n.hr,{}),(0,c.jsx)(n.h3,{id:"codec-model",children:"model"}),(0,c.jsxs)(n.p,{children:["\u2022 ",(0,c.jsx)(n.strong,{children:"model"}),": ",(0,c.jsx)(n.code,{children:"Model"})]}),(0,c.jsx)(n.hr,{}),(0,c.jsx)(n.h3,{id:"codec-decode",children:"decode"}),(0,c.jsxs)(n.p,{children:["\u25b8 ",(0,c.jsx)(n.strong,{children:"decode"}),"(",(0,c.jsx)(n.code,{children:"s"}),"): ",(0,c.jsx)(n.code,{children:"Graph"})]}),(0,c.jsxs)(n.p,{children:["Deserialize a PENMAN-notation string ",(0,c.jsx)(n.code,{children:"s"})," into its Graph object."]}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"Example"})})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"import { PENMANCodec } from 'penman-js';\n\nconst codec = new PENMANCodec();\nconst graph = codec.decode('(b / bark-01 :ARG0 (d / dog))');\nconsole.log(graph);\n// Outputs: Graph object with top node 'b'\n"})}),(0,c.jsx)(n.hr,{}),(0,c.jsx)(n.h3,{id:"codec-encode",children:"encode"}),(0,c.jsxs)(n.p,{children:["\u25b8 ",(0,c.jsx)(n.strong,{children:"encode"}),"(",(0,c.jsx)(n.code,{children:"g"}),", ",(0,c.jsx)(n.code,{children:"options?"}),"): ",(0,c.jsx)(n.code,{children:"string"})]}),(0,c.jsxs)(n.p,{children:["Serialize the graph ",(0,c.jsx)(n.code,{children:"g"})," into PENMAN notation."]}),(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"options"})," consists of the following:"]}),(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"top"})," - If given, the node to use as the top in serialization."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"indent"})," - How to indent formatted strings."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"compact"})," - If ",(0,c.jsx)(n.code,{children:"true"}),", put initial attributes on the first line."]}),"\n"]}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"Example"})})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"import { Graph, PENMANCodec } from 'penman-js';\n\nconst codec = new PENMANCodec();\nconsole.log(codec.encode(new Graph([['h', 'instance', 'hi']])));\n// '(h / hi)'\n"})}),(0,c.jsx)(n.hr,{}),(0,c.jsx)(n.h3,{id:"codec-format",children:"format"}),(0,c.jsxs)(n.p,{children:["\u25b8 ",(0,c.jsx)(n.strong,{children:"format"}),"(",(0,c.jsx)(n.code,{children:"tree"}),", ",(0,c.jsx)(n.code,{children:"options?"}),"): ",(0,c.jsx)(n.code,{children:"string"})]}),(0,c.jsxs)(n.p,{children:["Format ",(0,c.jsx)(n.em,{children:"tree"})," into a PENMAN string."]}),(0,c.jsx)(n.hr,{}),(0,c.jsx)(n.h3,{id:"codec-formatTriples",children:"formatTriples"}),(0,c.jsxs)(n.p,{children:["\u25b8 ",(0,c.jsx)(n.strong,{children:"formatTriples"}),"(",(0,c.jsx)(n.code,{children:"triples"}),", ",(0,c.jsx)(n.code,{children:"options?"}),"): ",(0,c.jsx)(n.code,{children:"string"})]}),(0,c.jsxs)(n.p,{children:["Return the formatted triple conjunction of ",(0,c.jsx)(n.code,{children:"triples"}),"."]}),(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"options"})," consists of the following:"]}),(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"indent"})," - Whether or not to indent the results, default true."]}),"\n"]}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"Example"})})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"import { PENMANCodec } from 'penman-js';\n\nconst codec = new PENMANCodec();\nconsole.log(codec.formatTriples([\n  ['a', ':instance', 'alpha'],\n  ['a', ':ARG0', 'b'],\n  ['b', ':instance', 'beta']\n]));\n// Expected output:\n// 'instance(a, alpha) ^\\\\nARG0(a, b) ^\\\\ninstance(b, beta)'\n"})}),(0,c.jsx)(n.hr,{}),(0,c.jsx)(n.h3,{id:"codec-iterdecode",children:"iterdecode"}),(0,c.jsxs)(n.p,{children:["\u25b8 ",(0,c.jsx)(n.strong,{children:"iterdecode"}),"(",(0,c.jsx)(n.code,{children:"lines"}),"): ",(0,c.jsx)(n.code,{children:"IterableIterator"}),"<",(0,c.jsx)(n.code,{children:"Graph"}),">"]}),(0,c.jsxs)(n.p,{children:["Yield graphs parsed from ",(0,c.jsx)(n.code,{children:"lines"}),"."]}),(0,c.jsx)(n.hr,{}),(0,c.jsx)(n.h3,{id:"codec-iterparse",children:"iterparse"}),(0,c.jsxs)(n.p,{children:["\u25b8 ",(0,c.jsx)(n.strong,{children:"iterparse"}),"(",(0,c.jsx)(n.code,{children:"lines"}),"): ",(0,c.jsx)(n.code,{children:"IterableIterator"}),"<",(0,c.jsx)(n.code,{children:"Tree"}),">"]}),(0,c.jsxs)(n.p,{children:["Yield trees parsed from ",(0,c.jsx)(n.code,{children:"lines"}),"."]}),(0,c.jsx)(n.hr,{}),(0,c.jsx)(n.h3,{id:"codec-parse",children:"parse"}),(0,c.jsxs)(n.p,{children:["\u25b8 ",(0,c.jsx)(n.strong,{children:"parse"}),"(",(0,c.jsx)(n.code,{children:"s"}),"): ",(0,c.jsx)(n.code,{children:"Tree"})]}),(0,c.jsxs)(n.p,{children:["Parse a PENMAN-notation string ",(0,c.jsx)(n.code,{children:"s"})," into its tree structure."]}),(0,c.jsx)(n.hr,{}),(0,c.jsx)(n.h3,{id:"codec-parseTriples",children:"parseTriples"}),(0,c.jsxs)(n.p,{children:["\u25b8 ",(0,c.jsx)(n.strong,{children:"parseTriples"}),"(",(0,c.jsx)(n.code,{children:"s"}),"): ",(0,c.jsx)(n.code,{children:"Triple"}),"[]"]}),(0,c.jsxs)(n.p,{children:["Parse a triple conjunction from ",(0,c.jsx)(n.em,{children:"s"}),"."]})]})]})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(o,{...e})}):o(e)}function i(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"function-decode",children:"Function: decode"}),"\n",(0,c.jsxs)(n.p,{children:["\u25b8 ",(0,c.jsx)(n.strong,{children:"decode"}),"(",(0,c.jsx)(n.code,{children:"s"}),", ",(0,c.jsx)(n.code,{children:"options?"}),"): ",(0,c.jsx)(n.code,{children:"Graph"})]}),"\n",(0,c.jsxs)(n.p,{children:["Deserialize PENMAN-serialized string ",(0,c.jsx)(n.code,{children:"s"})," into its Graph object."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"options"})," consists of the following:"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"model"})," - The model used for interpreting the graph."]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"Example"})})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"import { decode } from 'penman-js';\n\nconst graph = decode('(b / bark-01 :ARG0 (d / dog))');\n"})})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(i,{...e})}):i(e)}function t(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"function-iterdecode",children:"Function: iterdecode"}),"\n",(0,c.jsxs)(n.p,{children:["\u25b8 ",(0,c.jsx)(n.strong,{children:"iterdecode"}),"(",(0,c.jsx)(n.code,{children:"lines"}),", ",(0,c.jsx)(n.code,{children:"options?"}),"): ",(0,c.jsx)(n.code,{children:"IterableIterator"}),"<",(0,c.jsx)(n.code,{children:"Graph"}),">"]}),"\n",(0,c.jsxs)(n.p,{children:["Yield graphs parsed from ",(0,c.jsx)(n.code,{children:"lines"}),"."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"options"})," consists of the following:"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"model"})," - The model used for interpreting the graph."]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"Example"})})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"import { iterdecode } from 'penman-js';\n\nfor (const g of iterdecode('(a / alpha) (b / beta)')) {\n  // ...\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(t,{...e})}):t(e)}function j(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"function-encode",children:"Function: encode"}),"\n",(0,c.jsxs)(n.p,{children:["\u25b8 ",(0,c.jsx)(n.strong,{children:"encode"}),"(",(0,c.jsx)(n.code,{children:"g"}),", ",(0,c.jsx)(n.code,{children:"options?"}),"): ",(0,c.jsx)(n.code,{children:"string"})]}),"\n",(0,c.jsxs)(n.p,{children:["Serialize the graph ",(0,c.jsx)(n.code,{children:"g"})," from ",(0,c.jsx)(n.code,{children:"top"})," to PENMAN notation."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"options"})," consists of the following:"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"top"})," - If given, the node to use as the top in serialization."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"indent"})," - How to indent formatted strings."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"compact"})," - If ",(0,c.jsx)(n.code,{children:"true"}),", put initial attributes on the first line."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"model"})," - The model used for interpreting the graph."]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"Example"})})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"import { encode, Graph } from 'penman-js';\n\nconsole.log(encode(new Graph([['h', 'instance', 'hi']])));\n// '(h / hi)'\n"})})]})}function a(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(j,{...e})}):j(e)}function x(e){const n={code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"function-dump",children:"Function: dump"}),"\n",(0,c.jsxs)(n.p,{children:["\u25b8 ",(0,c.jsx)(n.strong,{children:"dump"}),"(",(0,c.jsx)(n.code,{children:"graphs"}),", ",(0,c.jsx)(n.code,{children:"file"}),", ",(0,c.jsx)(n.code,{children:"options?"}),"): ",(0,c.jsx)(n.code,{children:"void"})]}),"\n",(0,c.jsxs)(n.p,{children:["Serialize each graph in ",(0,c.jsx)(n.code,{children:"graphs"})," to PENMAN notation and write to ",(0,c.jsx)(n.code,{children:"file"}),"."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"Note:"})," This function is only available in Node."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"options"})," consists of the following:"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"model"})," - The model used for interpreting the graph."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"indent"})," - How to indent formatted strings."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"compact"})," - If ",(0,c.jsx)(n.code,{children:"true"}),", put initial attributes on the first line."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"encoding"})," - The encoding to use when writing to ",(0,c.jsx)(n.code,{children:"file"}),"."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(x,{...e})}):x(e)}function u(e){const n={code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"function-dumps",children:"Function: dumps"}),"\n",(0,c.jsxs)(n.p,{children:["\u25b8 ",(0,c.jsx)(n.strong,{children:"dumps"}),"(",(0,c.jsx)(n.code,{children:"graphs"}),", ",(0,c.jsx)(n.code,{children:"options?"}),"): ",(0,c.jsx)(n.code,{children:"string"})]}),"\n",(0,c.jsxs)(n.p,{children:["Serialize each graph in ",(0,c.jsx)(n.code,{children:"graphs"})," to the PENMAN format."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"options"})," consists of the following:"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"model"})," - The model used for interpreting the graph."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"indent"})," - How to indent formatted strings."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"compact"})," - If ",(0,c.jsx)(n.code,{children:"true"}),", put initial attributes on the first line."]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(u,{...e})}):u(e)}function m(e){const n={code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"function-load",children:"Function: load"}),"\n",(0,c.jsxs)(n.p,{children:["\u25b8 ",(0,c.jsx)(n.strong,{children:"load"}),"(",(0,c.jsx)(n.code,{children:"source"}),", ",(0,c.jsx)(n.code,{children:"options?"}),"): ",(0,c.jsx)(n.code,{children:"Graph"}),"[]"]}),"\n",(0,c.jsxs)(n.p,{children:["Deserialize a list of PENMAN-encoded graphs from ",(0,c.jsx)(n.code,{children:"source"}),"."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"Note:"})," This function is only available in Node."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"options"})," consists of the following:"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"model"})," - The model used for interpreting the graph."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"encoding"})," - The encoding to use when reading ",(0,c.jsx)(n.code,{children:"file"}),"."]}),"\n"]})]})}function f(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(m,{...e})}):m(e)}function N(e){const n={code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"function-loads",children:"Function: loads"}),"\n",(0,c.jsxs)(n.p,{children:["\u25b8 ",(0,c.jsx)(n.strong,{children:"loads"}),"(",(0,c.jsx)(n.code,{children:"string"}),", ",(0,c.jsx)(n.code,{children:"options?"}),"): ",(0,c.jsx)(n.code,{children:"Graph"}),"[]"]}),"\n",(0,c.jsx)(n.p,{children:"Deserialize a list of PENMAN-encoded graphs from a string."}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"options"})," consists of the following:"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"model"})," - The model used for interpreting the graph."]}),"\n"]})]})}function v(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(N,{...e})}):N(e)}const w={},b="codec",E={id:"api.codec",title:"codec",description:"_",source:"@site/docs/api.codec.mdx",sourceDirName:".",slug:"/api.codec",permalink:"/penman-js/api.codec",draft:!1,unlisted:!1,editUrl:"https://github.com/chanind/penman-js/tree/main/docs/docs/api.codec.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Trees and graphs",permalink:"/penman-js/trees-graphs-epigraphs"},next:{title:"constant",permalink:"/penman-js/api.constant"}},T={},A=[{value:"Function: encode",id:"function-encode",level:2},{value:"Function: decode",id:"function-decode",level:2},{value:"Function: iterdecode",id:"function-iterdecode",level:2},{value:"Class: PENMANCodec",id:"class-penmancodec",level:2},{value:"constructor",id:"codec-constructor",level:3},{value:"model",id:"codec-model",level:3},{value:"decode",id:"codec-decode",level:3},{value:"encode",id:"codec-encode",level:3},{value:"format",id:"codec-format",level:3},{value:"formatTriples",id:"codec-formatTriples",level:3},{value:"iterdecode",id:"codec-iterdecode",level:3},{value:"iterparse",id:"codec-iterparse",level:3},{value:"parse",id:"codec-parse",level:3},{value:"parseTriples",id:"codec-parseTriples",level:3},{value:"Function: dump",id:"function-dump",level:2},{value:"Function: dumps",id:"function-dumps",level:2},{value:"Function: load",id:"function-load",level:2},{value:"Function: loads",id:"function-loads",level:2}];function M(e){const n={h1:"h1",hr:"hr",...(0,r.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"codec",children:"codec"}),"\n",(0,c.jsx)(a,{}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(l,{}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(h,{}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(d,{}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(p,{}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(g,{}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(f,{}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(v,{})]})}function P(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(M,{...e})}):M(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>i,a:()=>d});var c=s(7294);const r={},o=c.createContext(r);function d(e){const n=c.useContext(o);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),c.createElement(o.Provider,{value:n},e.children)}}}]);